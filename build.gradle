plugins {
    id("io.micronaut.application") version "4.5.3"
    id("com.gradleup.shadow") version "8.3.6"
    id("io.micronaut.test-resources") version "4.5.3"
    id("io.micronaut.aot") version "4.5.3"
    id("com.google.protobuf") version "0.9.5"
}

version = "0.1"
group = "io.nycae.gameingestor"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut:micronaut-runtime")
    implementation('javax.annotation:javax.annotation-api:1.3.2')
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.data:micronaut-data-tx-hibernate")
    implementation("io.micronaut.kafka:micronaut-kafka")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation('com.lukaspradel:steam-web-api:1.11.0')
    implementation("io.micronaut.grpc:micronaut-grpc-server-runtime")
    implementation("io.grpc:grpc-protobuf:1.67.1")
    implementation("io.grpc:grpc-stub:1.67.1")
    implementation("com.google.protobuf:protobuf-java:4.31.0")
    implementation("io.confluent:kafka-protobuf-serializer:7.7.1")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")
    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass = "io.nycae.gameingestor.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("io.nycae.gameingestor.*")
    }
    testResources {
        sharedServer = true
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}


tasks.named("dockerfileNative") {
    jdkVersion = "21"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:4.31.0"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.67.1"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                option 'skipAnnotations'
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += 'build/generated/sources/proto/main/java'
            srcDirs += 'build/generated/sources/proto/main/grpc'
        }
    }
}

repositories {
    mavenCentral()
    maven { url "https://packages.confluent.io/maven/" }
}


